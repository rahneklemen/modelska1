#optimizacija hitrosti
import scipy.optimize as optimize
import numpy as np
from math import exp
import matplotlib.pyplot as plt

def v(t,v_0):
    l=1
    t_0=1
    lamda=6/(t_0**3)*(l-v_0*t_0)
    
    return -lamda/4*t**2+lamda/2*t_0*t+v_0
    
#n=50  



#v0=5

a=[5, 4.55543641,  4.33760024,  4.12420971,  3.91526482,  3.71076555,3.51071192,  3.31510393,  3.12394158,  2.93722486,  2.75495378,2.57712833,  2.40374852,  2.23481434,  2.0703258 ,  1.9102829 ,1.75468564,  1.60353401,  1.45682802,  1.31456767,  1.17675295,1.04338386,  0.9144604 ,  0.78998257,  0.66995039,  0.55436386,0.44322295,  0.33652768,  0.23427804,  0.13647403,  0.04311567,-0.04579705, -0.13026415, -0.21028561, -0.28586145, -0.35699164,-0.4236762 , -0.48591513, -0.54370841, -0.59705607, -0.64595808,-0.69041444, -0.73042518, -0.76599028, -0.79710974, -0.82378357,-0.84601175, -0.86379429, -0.87713118, -0.88602245, -0.89491371 ]
#v_0=0.5

a2=[0.5, 0.55808349,  0.58654439,  0.61442446,  0.64172372,  0.66844212,0.6945797 ,  0.72013643,  0.74511234,  0.76950741,  0.79332164,0.81655504,  0.8392076 ,  0.86127933,  0.88277023,  0.90368029,0.92400952,  0.94375791,  0.96292547,  0.9815122 ,  0.99951809,1.01694314,  1.03378736,  1.05005075,  1.0657333 ,  1.08083502,1.09535589,  1.10929593,  1.12265513,  1.13543351,  1.14763105,1.15924776,  1.17028363,  1.18073867,  1.19061288,  1.19990626,1.2086188 ,  1.21675051,  1.22430138,  1.23127143,  1.23766063,1.24346901,  1.24869655,  1.25334326,  1.25740913,  1.26089417,1.26379838,  1.26612176,  1.2678643 ,  1.26902601,  1.27018772]

n=len(a)
print(n)
b=[x/(n-1) for x in range(n)]
print(a,'\n',b)

t = np.arange(0, 1, 0.01);
nicla,=plt.plot(t,v(t,5),color='r')
prva,= plt.plot(b,a,marker='o',color='b')
tretja,=plt.plot(t,v(t,0.5),'b')
cetrta,=plt.plot(b,a2,marker='o',color='y')


plt.legend([nicla,prva], ['analitična rešitev,$v_0=5$','numerična rešitev, N=50,$v_0=5$'],title='')
plt.grid()

plt.xlabel('čas')
plt.ylabel('hitrost')

plt.savefig('hitrost1.png')
plt.show()
